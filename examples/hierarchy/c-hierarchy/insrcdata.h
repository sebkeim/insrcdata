// generated by insrcdata version 0.3.0

#ifndef INSRCDATA_INSRCDATA_H
#define INSRCDATA_INSRCDATA_H
#include <stddef.h>
#include <stdint.h>
#include <stdbool.h>

typedef struct  {
    const char* title_;
    const char* chapter_code_;
    uint8_t chapter_;
} leave_t;
static unsigned const LEAVE_TABLE_COUNT = 9;
extern const leave_t LEAVE_TABLE[LEAVE_TABLE_COUNT];
typedef struct { uint8_t* ptr; uint8_t* end; } leave_iter_t;
extern const leave_t* leave_next(leave_iter_t* idx);

typedef struct  {
    const char* title_;
    const char* code_;
    uint8_t parent_;
} chapter_t;
static unsigned const CHAPTER_TABLE_COUNT = 7;
extern const chapter_t CHAPTER_TABLE[CHAPTER_TABLE_COUNT];
typedef struct { uint8_t* ptr; uint8_t* end; } chapter_iter_t;
extern const chapter_t* chapter_next(chapter_iter_t* idx);



// ------    
static inline const char* leave_title(const leave_t* s) { return s->title_; }
static inline const char* leave_chapter_code(const leave_t* s) { return s->chapter_code_; }
extern const chapter_t* leave_chapter(const leave_t* s);


// ------    
static inline const char* chapter_title(const chapter_t* s) { return s->title_; }
static inline const char* chapter_code(const chapter_t* s) { return s->code_; }
extern chapter_iter_t  chapter_code_range( const char* start, const char* stop);
extern const chapter_t* chapter_parent(const chapter_t* s);
extern leave_iter_t chapter_leaves(const chapter_t* s);

#endif //  INSRCDATA_H 
