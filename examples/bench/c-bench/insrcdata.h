// generated by insrcdata version 0.3.0

#ifndef INSRCDATA_INSRCDATA_H
#define INSRCDATA_INSRCDATA_H
#include <stddef.h>
#include <stdint.h>
#include <stdbool.h>

typedef struct  {
    uint8_t byte_;
    uint16_t short_;
    uint32_t int_;
    const char* str_;
} bench_t;
static unsigned const BENCH_TABLE_COUNT = 500;
extern const bench_t BENCH_TABLE[BENCH_TABLE_COUNT];
typedef struct { uint16_t* ptr; uint16_t* end; } bench_iter_t;
extern const bench_t* bench_next(bench_iter_t* idx);



// ------    
static inline uint32_t bench_byte(const bench_t* s) { return s->byte_; }
extern bench_iter_t  bench_byte_range( uint32_t start, uint32_t stop);
static inline uint32_t bench_short(const bench_t* s) { return s->short_; }
extern bench_iter_t  bench_short_range( uint32_t start, uint32_t stop);
static inline uint32_t bench_int(const bench_t* s) { return s->int_; }
extern bench_iter_t  bench_int_range( uint32_t start, uint32_t stop);
static inline const char* bench_str(const bench_t* s) { return s->str_; }
extern bench_iter_t  bench_str_range( const char* start, const char* stop);

#endif //  INSRCDATA_H 
