mod adhoc;
mod insrcdata;
mod optjoin;

// there is curently no builtin support for optional values
// this sample show available strategies to handle optional values

// interface that will be implemented by strategies
pub trait Optional {
    // optional getters from methods generated by insrcdata
    fn score(&self) -> Option<f32>;
    fn count(&self) -> Option<u16>;

    // output the content of a row with optional values
    fn print(&self, name: &str) {
        print!("{}", name);
        if let Some(score) = self.score() {
            print!(" score={}", score);
        }
        if let Some(count) = self.count() {
            print!(" count={}", count);
        }
        println!();
    }
}

fn main() {
    optjoin::sample();
    adhoc::sample();
}
